import { LibraryCreateAuthorController } from './controllers/library-create-author.controller';
import { LibraryCreateAuthorsController } from './controllers/library-create-authors.controller';
import { LibraryPaginateAuthorsController } from './controllers/library-paginate-authors.controller';
import { LibraryGetAuthorsController } from './controllers/library-get-authors.controller';
import { LibraryFindAuthorByIdController } from './controllers/library-find-author-by-id.controller';
import { LibraryFindAuthorController } from './controllers/library-find-author.controller';
import { LibraryUpdateAuthorByIdController } from './controllers/library-update-author-by-id.controller';
import { LibraryUpdateAuthorsController } from './controllers/library-update-authors.controller';
import { LibraryUpsertAuthorController } from './controllers/library-upsert-author.controller';
import { LibraryDeleteAuthorByIdController } from './controllers/library-delete-author-by-id.controller';
import { LibraryDeleteAuthorsController } from './controllers/library-delete-authors.controller';
import { LibraryCreateAuthorResolver } from './resolvers/library-create-author.resolver';
import { LibraryCreateAuthorsResolver } from './resolvers/library-create-authors.resolver';
import { LibraryPaginateAuthorsResolver } from './resolvers/library-paginate-authors.resolver';
import { LibraryGetAuthorsResolver } from './resolvers/library-get-authors.resolver';
import { LibraryFindAuthorByIdResolver } from './resolvers/library-find-author-by-id.resolver';
import { LibraryFindAuthorResolver } from './resolvers/library-find-author.resolver';
import { LibraryUpdateAuthorByIdResolver } from './resolvers/library-update-author-by-id.resolver';
import { LibraryUpdateAuthorsResolver } from './resolvers/library-update-authors.resolver';
import { LibraryUpsertAuthorResolver } from './resolvers/library-upsert-author.resolver';
import { LibraryDeleteAuthorByIdResolver } from './resolvers/library-delete-author-by-id.resolver';
import { LibraryDeleteAuthorsResolver } from './resolvers/library-delete-authors.resolver';
import { LibraryCreateAuthorHandler } from './handlers/library-create-author.handler';
import { LibraryCreateAuthorsHandler } from './handlers/library-create-authors.handler';
import { LibraryPaginateAuthorsHandler } from './handlers/library-paginate-authors.handler';
import { LibraryGetAuthorsHandler } from './handlers/library-get-authors.handler';
import { LibraryFindAuthorByIdHandler } from './handlers/library-find-author-by-id.handler';
import { LibraryFindAuthorHandler } from './handlers/library-find-author.handler';
import { LibraryUpdateAuthorByIdHandler } from './handlers/library-update-author-by-id.handler';
import { LibraryUpdateAuthorsHandler } from './handlers/library-update-authors.handler';
import { LibraryUpsertAuthorHandler } from './handlers/library-upsert-author.handler';
import { LibraryDeleteAuthorByIdHandler } from './handlers/library-delete-author-by-id.handler';
import { LibraryDeleteAuthorsHandler } from './handlers/library-delete-authors.handler';
import { LibraryAuthorSeeder } from './seeder/library-author.seeder';
export declare const LibraryAuthorControllers: (typeof LibraryCreateAuthorController | typeof LibraryCreateAuthorsController | typeof LibraryPaginateAuthorsController | typeof LibraryGetAuthorsController | typeof LibraryFindAuthorByIdController | typeof LibraryFindAuthorController | typeof LibraryUpdateAuthorByIdController | typeof LibraryUpdateAuthorsController | typeof LibraryUpsertAuthorController | typeof LibraryDeleteAuthorByIdController | typeof LibraryDeleteAuthorsController)[];
export declare const LibraryAuthorResolvers: (typeof LibraryCreateAuthorResolver | typeof LibraryCreateAuthorsResolver | typeof LibraryPaginateAuthorsResolver | typeof LibraryGetAuthorsResolver | typeof LibraryFindAuthorByIdResolver | typeof LibraryFindAuthorResolver | typeof LibraryUpdateAuthorByIdResolver | typeof LibraryUpdateAuthorsResolver | typeof LibraryUpsertAuthorResolver | typeof LibraryDeleteAuthorByIdResolver | typeof LibraryDeleteAuthorsResolver)[];
export declare const LibraryAuthorApiHandlers: (typeof LibraryCreateAuthorHandler | typeof LibraryCreateAuthorsHandler | typeof LibraryPaginateAuthorsHandler | typeof LibraryGetAuthorsHandler | typeof LibraryFindAuthorByIdHandler | typeof LibraryFindAuthorHandler | typeof LibraryUpdateAuthorByIdHandler | typeof LibraryUpdateAuthorsHandler | typeof LibraryUpsertAuthorHandler | typeof LibraryDeleteAuthorByIdHandler | typeof LibraryDeleteAuthorsHandler)[];
export declare const LibraryAuthorServices: (typeof LibraryAuthorSeeder)[];
