"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlobValueObject = void 0;
const common_1 = require("@nestjs/common");
const value_object_1 = require("./value-object");
class BlobValueObject extends value_object_1.ValueObject {
    set value(value) {
        if (value instanceof Buffer)
            value = value.toString('base64');
        super.value = value;
    }
    get value() {
        if (typeof super.value === 'string')
            return super.value;
        throw new common_1.BadRequestException(`The value for BlobValueObject must must to be a string base64, your type is ${typeof super.value}`);
    }
    get buffer() {
        if (typeof super.value === 'string')
            return Buffer.from(super.value, 'base64');
        throw new common_1.BadRequestException(`The value for BlobValueObject must must to be a string base64, your type is ${typeof super.value}`);
    }
}
exports.BlobValueObject = BlobValueObject;
