import { IValueObject } from './value-object.interface';
import { DataValueObject, ValidationRules } from './../aurora.types';
export declare abstract class ValueObject<T> implements IValueObject<T> {
    readonly type: string;
    validationRules: ValidationRules;
    data: DataValueObject;
    protected _value: T;
    set value(value: T);
    get value(): T;
    constructor(dataValue: T | DataValueObject, validationRules?: ValidationRules, data?: DataValueObject | T);
}
